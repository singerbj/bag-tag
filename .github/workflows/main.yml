name: "godot-ci export"
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build-windows:
        description: 'Build Windows'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      build-linux:
        description: 'Build Linux'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      build-mac:
        description: 'Build Mac'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      export-android:
        description: 'Deploy Android'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      export-ios:
        description: 'Deploy iOS'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'
      
permissions:
  contents: write

env:
  GODOT_VERSION: 4.2.1
  EXPORT_NAME: bag-tag
  PROJECT_PATH: ./

jobs:
  gexport-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "HTML5" ./build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.

  export-windows:
    name: Windows Export
    if: "${{ github.event.inputs.windows-export == 'true' }}"
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    if: "${{ github.event.inputs.linux-export == 'true' }}"
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux/X11" ./build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

  export-mac:
    name: Mac Export
    if: "${{ github.event.inputs.mac-export == 'true' }}"
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Mac OSX" ./build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/mac

  export-android:
    name: Android Export
    if: "${{ github.event.inputs.android-export == 'true' }}"
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Android Build
        run: |
          mkdir -v -p build/android
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Android" ./build/android/$EXPORT_NAME.apk
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: android
          path: build/android
  export-ios:
    name: IOS Export
    if: "${{ github.event.inputs.ios-export == 'true' }}"
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.2.1
    steps:
      - name: Export and upload to Testflight
        uses: dulvui/godot-ios-upload@v4
        with:
          project-name: FutsalManager
          apple-id-username: ${{ secrets.IOS_APPLE_ID_USERNAME }}
          apple-id-password: ${{ secrets.IOS_APPLE_ID_PASSWORD }}
        